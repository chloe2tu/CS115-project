"""
Names: Chloe Tu, Jonathan Kwon, Rishabh Dhadda
Pledge: I pledge my honor that I abided by the Stevens Honor System
    
"""
PREF_FILE = 'musicrecplus_ex2_a.txt'

def loadUsers(fileName):
    """Reads in a file of stored users' preferences stored in the file 'fileName'. Returns a dictionary containing a mapping of user names to a list preferred artists (Chloe)"""
    file = open(fileName, 'r')
    userDict = {}
    for line in file:
    #Read and parse a single line
        [userName,bands] = line.strip().split(':')
        bandList = bands.split('.')
        bandList.sort()
        userDict[userName] = bandList
    file.close()
    return userDict

def getPreferences(userName, userMap):
    """Returns a lsit of the user's preferred artists. If the system already knows about the user, it gets the preference out of the userMap dictionary and then asks the user if they have additional preferences. If the user is new, it simply asks the user for their preferences."""
    ##Need to add new user into dictionary 
    newPref = ''
    if userName in userMap:
        prefs = userMap[userName]
        print("I see that you have used the system before.")
        print("Your music preferences include:")
        for artist in prefs:
            print(artist)
        print("Please enter another artist or band that you like or just press enter")
        newPref = input("to see your recommendations:")
    else:
        prefs = []
        print("I see that you are a new user.")
        newPref = input("Please Enter the name of an artist or band that you like:")
    while newPref!= '':
        prefs.append(newPref.strip().title())
        print("Please Enter the name of an artist or band that you like, or just press Enter")
        newPref = input("to see your recommendations:")
    #always keep the lists in sorted order for east of comparison
    prefs.sort()
    return prefs

def getRecommendations(currUser, prefs, userMap):
    """Get recommendations for a user (currUSer) based on the users in userMap (a dictionary) and the user's preferences in pref (a list). Return a list of recommended artist."""
    ## account for private mode
    pass

def findBestUser(currUser, prefs, userMap):
    ## almost same code besides if user is private
    pass


def drop(list1, list2):
    """Return a new list that contains only the elements in list2 that were NOT in list1 (Chloe)"""
    list3 = []
    i = 0
    j = 0
    while i<len(list1) and j<len(list2):
        if list1[i] == list2[j]:
            print("Skipping", list1[i])
            i+=1
            j+=1
        elif list1[i]<list2[j]:
            i+= 1
        else:
            list3.append(list2[j])
            j+= 1
    # add the rest of list2 if there's anything left
    while j < len(list2):
        list3.append(list2[j])
        j+= 1
    return list3

def numMatches(list1, list2):
    """return the number of elements that match between two sorted lists (Chloe)"""
    matches = 0
    i = 0
    j = 0
    while i < len(list1) and j < len(list2):
        if list[i] == list2[j]:
            matches += 1
            i+=1
            j+=1
        elif list[i] < list2[j]:
            i+=1
        else:
            j+= 1
    return matches

def saveUserPreferences(userName, prefs, userMap, fileName):
    #change a little
    pass

def main():
    """The main recommendation function"""

    userMap = loadUsers(PREF_FILE)
    print("Welcome to the music recommender system!")
    print(userMap)

    userName = input("Please enter your name:")
    if userName not in userMap:
        print(userName)
        print("I see your a new user!")
        print()
        newUser = input("Enter your username here and if you want to remain private put a $ after the username: ")
        getPreferences(newUser, userMap)

                    
    print("Welcome,", userName)
    while True:
        print("Enter a letter to choose an option :")
        print("e - Enter preferences") 
        print("r - Get recommendations")
        print("p - Show most popular artists")
        print("h - How popular is the most popular")
        print("m - Which user has the most likes")
        print("d - Delete preferences")
        print("s - Show preferences")
        print("q - Save and quit \n")
        choice = input("Enter your choice: ")

        
    #prefs = getPreferences(userName, userMap)
    #recs = getRecommendations(userName, prefs, userMap)


    

    
if __name__ == '__main__': main()
